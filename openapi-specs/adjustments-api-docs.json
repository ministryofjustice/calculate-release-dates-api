{
  "openapi": "3.0.1",
  "info": {
    "title": "Adjustments API",
    "description": "API for adjustments CRUD operations",
    "contact": {
      "name": "HMPPS Digital Studio",
      "email": "feedback@digital.justice.gov.uk"
    },
    "version": "2025-02-13.4755.b27a9b2"
  },
  "servers": [
    {
      "url": "https://adjustments-api-dev.hmpps.service.justice.gov.uk",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "ThingsToDoController",
      "description": "Operations related to the things-to-do list for prisoners"
    },
    {
      "name": "adjustment-controller",
      "description": "CRUD operations for adjustments."
    },
    {
      "name": "legacy-controller",
      "description": "CRUD operations for syncing data from NOMIS into adjustments api database."
    },
    {
      "name": "ada-adjudication-controller",
      "description": "Read operations for additional days logic"
    }
  ],
  "paths": {
    "/queue-admin/retry-dlq/{dlqName}": {
      "put": {
        "tags": [
          "hmpps-queue-resource"
        ],
        "operationId": "retryDlq",
        "parameters": [
          {
            "name": "dlqName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RetryDlqResult"
                }
              }
            }
          }
        }
      }
    },
    "/queue-admin/retry-all-dlqs": {
      "put": {
        "tags": [
          "hmpps-queue-resource"
        ],
        "operationId": "retryAllDlqs",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RetryDlqResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/queue-admin/purge-queue/{queueName}": {
      "put": {
        "tags": [
          "hmpps-queue-resource"
        ],
        "operationId": "purgeQueue",
        "parameters": [
          {
            "name": "queueName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PurgeQueueResult"
                }
              }
            }
          }
        }
      }
    },
    "/legacy/adjustments/{adjustmentId}": {
      "get": {
        "tags": [
          "legacy-controller"
        ],
        "summary": "Get an adjustments",
        "description": "Get details of an adjustment in the NOMIS system format.",
        "operationId": "get",
        "parameters": [
          {
            "name": "adjustmentId",
            "in": "path",
            "description": "The adjustment UUID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyAdjustment"
                }
              }
            }
          },
          "200": {
            "description": "Adjustment found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyAdjustment"
                }
              }
            }
          },
          "404": {
            "description": "Adjustment not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyAdjustment"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "legacy-controller"
        ],
        "summary": "Update an adjustments",
        "description": "Synchronise an update from NOMIS into adjustments API.",
        "operationId": "update",
        "parameters": [
          {
            "name": "adjustmentId",
            "in": "path",
            "description": "The adjustment UUID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.nomis-offence+json": {
              "schema": {
                "$ref": "#/components/schemas/LegacyAdjustment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token"
          },
          "200": {
            "description": "Adjustment update"
          },
          "404": {
            "description": "Adjustment not found"
          }
        }
      },
      "delete": {
        "tags": [
          "legacy-controller"
        ],
        "summary": "Delete an adjustments",
        "description": "Synchronise a deletion from NOMIS into adjustments API.",
        "operationId": "delete",
        "parameters": [
          {
            "name": "adjustmentId",
            "in": "path",
            "description": "The adjustment UUID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token"
          },
          "200": {
            "description": "Adjustment deleted"
          },
          "404": {
            "description": "Adjustment not found"
          }
        }
      }
    },
    "/adjustments/{adjustmentId}": {
      "get": {
        "tags": [
          "adjustment-controller"
        ],
        "summary": "Get an adjustments",
        "description": "Get details of an adjustment",
        "operationId": "get_1",
        "parameters": [
          {
            "name": "adjustmentId",
            "in": "path",
            "description": "The adjustment UUID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdjustmentDto"
                }
              }
            }
          },
          "200": {
            "description": "Adjustment found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdjustmentDto"
                }
              }
            }
          },
          "404": {
            "description": "Adjustment not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdjustmentDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "adjustment-controller"
        ],
        "summary": "Update an adjustments",
        "description": "Update an adjustment.",
        "operationId": "update_1",
        "parameters": [
          {
            "name": "adjustmentId",
            "in": "path",
            "description": "The adjustment UUID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdjustmentDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token"
          },
          "200": {
            "description": "Adjustment update"
          },
          "404": {
            "description": "Adjustment not found"
          }
        }
      },
      "delete": {
        "tags": [
          "adjustment-controller"
        ],
        "summary": "Delete an adjustments",
        "description": "Delete an adjustment.",
        "operationId": "delete_1",
        "parameters": [
          {
            "name": "adjustmentId",
            "in": "path",
            "description": "The adjustment UUID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token"
          },
          "200": {
            "description": "Adjustment deleted"
          },
          "404": {
            "description": "Adjustment not found"
          }
        }
      }
    },
    "/legacy/adjustments": {
      "post": {
        "tags": [
          "legacy-controller"
        ],
        "summary": "Create an adjustments",
        "description": "Synchronise a creation from NOMIS into adjustments API.",
        "operationId": "create",
        "requestBody": {
          "content": {
            "application/vnd.nomis-offence+json": {
              "schema": {
                "$ref": "#/components/schemas/LegacyAdjustment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyAdjustmentCreatedResponse"
                }
              }
            }
          },
          "201": {
            "description": "Adjustment created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyAdjustmentCreatedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/legacy/adjustments/migration": {
      "post": {
        "tags": [
          "legacy-controller"
        ],
        "summary": "Create an adjustment from the migration job",
        "description": "Synchronise a creation from NOMIS into adjustments API. This endpoint is used for initial migration of data from NOMIS without raising any events.",
        "operationId": "migration",
        "requestBody": {
          "content": {
            "application/vnd.nomis-offence+json": {
              "schema": {
                "$ref": "#/components/schemas/LegacyAdjustment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyAdjustmentCreatedResponse"
                }
              }
            }
          },
          "201": {
            "description": "Adjustment created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyAdjustmentCreatedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/adjustments": {
      "get": {
        "tags": [
          "adjustment-controller"
        ],
        "summary": "Get current adjustments by person",
        "description": "Get current adjustments for a given person.",
        "operationId": "findByPerson",
        "parameters": [
          {
            "name": "person",
            "in": "query",
            "description": "The noms ID of the person",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of adjustments. Defaults to ACTIVE",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "INACTIVE",
                "DELETED",
                "INACTIVE_WHEN_DELETED"
              ]
            }
          },
          {
            "name": "currentPeriodOfCustody",
            "in": "query",
            "description": "Only get the adjustments linked to the current period of custody. Defaults to true",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sentenceEnvelopeDate",
            "in": "query",
            "description": "The earliest sentence date to filter adjustments by. Defaults to earliest active sentence date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdjustmentDto"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Adjustment found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdjustmentDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Adjustment not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdjustmentDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "adjustment-controller"
        ],
        "summary": "Create adjustments",
        "description": "Create adjustment.",
        "operationId": "create_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AdjustmentDto"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseDto"
                }
              }
            }
          },
          "201": {
            "description": "Adjustments created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/adjustments/{adjustmentId}/effective-days": {
      "post": {
        "tags": [
          "adjustment-controller"
        ],
        "summary": "Update the effective calculable days for and adjustment",
        "description": "Update an adjustment's effective days.",
        "operationId": "updateEffectiveDays",
        "parameters": [
          {
            "name": "adjustmentId",
            "in": "path",
            "description": "The adjustment UUID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdjustmentEffectiveDaysDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token"
          },
          "200": {
            "description": "Adjustment update"
          },
          "404": {
            "description": "Adjustment not found"
          }
        }
      }
    },
    "/adjustments/validate": {
      "post": {
        "tags": [
          "adjustment-controller"
        ],
        "summary": "Validate an adjustments",
        "description": "Validate an adjustment.",
        "operationId": "validate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdjustmentDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationMessage"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Adjustment validation returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationMessage"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adjustments/restore": {
      "post": {
        "tags": [
          "adjustment-controller"
        ],
        "summary": "Restore a deleted adjustment",
        "description": "Restore a deleted adjustment",
        "operationId": "restore",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestoreAdjustmentsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token"
          },
          "200": {
            "description": "Adjustment restored"
          },
          "404": {
            "description": "Adjustment not found"
          }
        }
      }
    },
    "/adjustments/person/{person}/manual-unused-deductions": {
      "post": {
        "tags": [
          "adjustment-controller"
        ],
        "summary": "Update the unused deduction days for a person",
        "description": "Update the unused deduction days for a person",
        "operationId": "setUnusedDaysManually",
        "parameters": [
          {
            "name": "person",
            "in": "path",
            "description": "The person",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManualUnusedDeductionsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token"
          },
          "200": {
            "description": "Adjustment update"
          },
          "404": {
            "description": "Adjustment not found"
          }
        }
      }
    },
    "/adjustments/additional-days/{person}/reject-prospective-ada": {
      "post": {
        "tags": [
          "ada-adjudication-controller"
        ],
        "summary": "Reject prospective ADA.",
        "operationId": "rejectProspectiveAda",
        "parameters": [
          {
            "name": "person",
            "in": "path",
            "description": "The noms ID of the person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "AA1256A"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProspectiveAdaRejectionDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Reject a prospective ADA"
          },
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token"
          },
          "404": {
            "description": "Adjustment not found"
          }
        }
      }
    },
    "/legacy/adjustments/{adjustmentId}/current-term": {
      "patch": {
        "tags": [
          "legacy-controller"
        ],
        "summary": "Set the current term of an adjustment",
        "description": "Temporary endpoint to migrate the current term value of an adjustment.",
        "operationId": "setCurrentTerm",
        "parameters": [
          {
            "name": "adjustmentId",
            "in": "path",
            "description": "The adjustment UUID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.nomis-offence+json": {
              "schema": {
                "$ref": "#/components/schemas/LegacyAdjustment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Adjustment updated"
          },
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token"
          },
          "404": {
            "description": "Adjustment not found"
          }
        }
      }
    },
    "/things-to-do/prisoner/{prisonerId}": {
      "get": {
        "tags": [
          "ThingsToDoController"
        ],
        "summary": "Retrieve things-to-do for a prisoner",
        "description": "Provides a list of things-to-do for a specified prisoner based on their ID.",
        "operationId": "getThingsToDo",
        "parameters": [
          {
            "name": "prisonerId",
            "in": "path",
            "description": "Prisoner's ID (also known as nomsId)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "A1234AB"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - valid Oauth2 token required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThingsToDo"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - requires appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThingsToDo"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returns the things-to-do list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThingsToDo"
                }
              }
            }
          }
        }
      }
    },
    "/queue-admin/get-dlq-messages/{dlqName}": {
      "get": {
        "tags": [
          "hmpps-queue-resource"
        ],
        "operationId": "getDlqMessages",
        "parameters": [
          {
            "name": "dlqName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxMessages",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetDlqResult"
                }
              }
            }
          }
        }
      }
    },
    "/adjustments/person/{person}/unused-deductions-result": {
      "get": {
        "tags": [
          "adjustment-controller"
        ],
        "summary": "Get the unused deductions result",
        "description": "Get the unused deductions result",
        "operationId": "getUnusedDeductionsResult",
        "parameters": [
          {
            "name": "person",
            "in": "path",
            "description": "The person",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnusedDeductionsCalculationResultDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnusedDeductionsCalculationResultDto"
                }
              }
            }
          },
          "404": {
            "description": "Person not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnusedDeductionsCalculationResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/adjustments/additional-days/{person}/adjudication-details": {
      "get": {
        "tags": [
          "ada-adjudication-controller"
        ],
        "summary": "Get all details of adjudications and associated adjustments",
        "operationId": "getAdaAdjudicationDetails",
        "parameters": [
          {
            "name": "person",
            "in": "path",
            "description": "The noms ID of the person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "AA1256A"
          },
          {
            "name": "selectedProspectiveAdaDates",
            "in": "query",
            "description": "The dates of selected prospective adas",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": "2022-01-10,2022-02-11"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdaAdjudicationDetails"
                }
              }
            }
          },
          "200": {
            "description": "Details of adjudications and adjustments returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdaAdjudicationDetails"
                }
              }
            }
          },
          "404": {
            "description": "Adjustment not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdaAdjudicationDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RetryDlqResult": {
        "required": [
          "messagesFoundCount"
        ],
        "type": "object",
        "properties": {
          "messagesFoundCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PurgeQueueResult": {
        "required": [
          "messagesFoundCount"
        ],
        "type": "object",
        "properties": {
          "messagesFoundCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "LegacyAdjustment": {
        "required": [
          "active",
          "adjustmentDays",
          "adjustmentType",
          "bookingId",
          "bookingReleased",
          "currentTerm",
          "offenderNo"
        ],
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "The NOMIS booking ID of the adjustment",
            "format": "int64"
          },
          "sentenceSequence": {
            "type": "integer",
            "description": "The NOMIS sentence sequence of the adjustment",
            "format": "int32"
          },
          "offenderNo": {
            "type": "string",
            "description": "The NOMIS offender number aka nomsId, prisonerId of the person this adjustment applies to"
          },
          "adjustmentType": {
            "type": "string",
            "description": "The NOMIS adjustment type",
            "enum": [
              "ADA",
              "RADA",
              "UAL",
              "LAL",
              "SREM",
              "RSR",
              "RST",
              "RX",
              "S240A",
              "UR",
              "TCA",
              "TSA"
            ]
          },
          "adjustmentDate": {
            "type": "string",
            "description": "The NOMIS date of adjustment",
            "format": "date"
          },
          "adjustmentFromDate": {
            "type": "string",
            "description": "The NOMIS from date of adjustment",
            "format": "date"
          },
          "adjustmentDays": {
            "type": "integer",
            "description": "The NOMIS adjustment days",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "description": "The NOMIS comment for this adjustment"
          },
          "active": {
            "type": "boolean",
            "description": "The NOMIS active or inactive flag"
          },
          "bookingReleased": {
            "type": "boolean",
            "description": "Has the prisoner been released from the NOMIS booking"
          },
          "agencyId": {
            "type": "string",
            "description": "The ID of the agency the prisoner is located"
          },
          "currentTerm": {
            "type": "boolean",
            "description": "Is the adjustment part of the current term. (Most recent booking NOMIS)"
          }
        },
        "description": "An adjustment structured for synchronising with the NOMIS system"
      },
      "AdditionalDaysAwardedDto": {
        "required": [
          "adjudicationId",
          "prospective"
        ],
        "type": "object",
        "properties": {
          "adjudicationId": {
            "type": "array",
            "description": "The id of the adjudication that resulted in the ADA",
            "items": {
              "type": "string",
              "description": "The id of the adjudication that resulted in the ADA"
            }
          },
          "prospective": {
            "type": "boolean"
          }
        },
        "description": "The details of an additional days awarded (ADA) adjustment"
      },
      "AdjustmentDto": {
        "required": [
          "adjustmentType",
          "bookingId",
          "person"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the adjustment",
            "format": "uuid"
          },
          "bookingId": {
            "type": "integer",
            "description": "The NOMIS booking ID of the adjustment",
            "format": "int64"
          },
          "person": {
            "type": "string",
            "description": "The NOMIS ID of the person this adjustment applies to"
          },
          "adjustmentType": {
            "type": "string",
            "description": "The type of adjustment",
            "enum": [
              "REMAND",
              "TAGGED_BAIL",
              "UNLAWFULLY_AT_LARGE",
              "LAWFULLY_AT_LARGE",
              "ADDITIONAL_DAYS_AWARDED",
              "RESTORATION_OF_ADDITIONAL_DAYS_AWARDED",
              "SPECIAL_REMISSION",
              "UNUSED_DEDUCTIONS",
              "CUSTODY_ABROAD",
              "APPEAL_APPLICANT"
            ]
          },
          "toDate": {
            "type": "string",
            "description": "The end date of the adjustment",
            "format": "date"
          },
          "fromDate": {
            "type": "string",
            "description": "The start date of the adjustment",
            "format": "date"
          },
          "days": {
            "type": "integer",
            "description": "The number of days of the adjustment",
            "format": "int32"
          },
          "remand": {
            "$ref": "#/components/schemas/RemandDto"
          },
          "additionalDaysAwarded": {
            "$ref": "#/components/schemas/AdditionalDaysAwardedDto"
          },
          "unlawfullyAtLarge": {
            "$ref": "#/components/schemas/UnlawfullyAtLargeDto"
          },
          "lawfullyAtLarge": {
            "$ref": "#/components/schemas/LawfullyAtLargeDto"
          },
          "specialRemission": {
            "$ref": "#/components/schemas/SpecialRemissionDto"
          },
          "taggedBail": {
            "$ref": "#/components/schemas/TaggedBailDto"
          },
          "timeSpentInCustodyAbroad": {
            "$ref": "#/components/schemas/TimeSpentInCustodyAbroadDto"
          },
          "timeSpentAsAnAppealApplicant": {
            "$ref": "#/components/schemas/TimeSpentAsAnAppealApplicantDto"
          },
          "sentenceSequence": {
            "type": "integer",
            "description": "The NOMIS sentence sequence of the adjustment",
            "format": "int32"
          },
          "adjustmentTypeText": {
            "type": "string",
            "description": "Human readable text for type of adjustment",
            "readOnly": true
          },
          "adjustmentArithmeticType": {
            "type": "string",
            "description": "Indicates whether the adjustment was an addition or deduction",
            "readOnly": true,
            "enum": [
              "ADDITION",
              "DEDUCTION",
              "NONE"
            ]
          },
          "prisonName": {
            "type": "string",
            "description": "The name name of the prison where the prisoner was located at the time the adjustment was created ",
            "readOnly": true,
            "example": "Leeds"
          },
          "prisonId": {
            "type": "string",
            "description": "The prison where the prisoner was located at the time the adjustment was created (a 3 character code identifying the prison)",
            "readOnly": true,
            "example": "LDS"
          },
          "lastUpdatedBy": {
            "type": "string",
            "description": "The person last updating this adjustment",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "The status of this adjustment",
            "readOnly": true,
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "DELETED",
              "INACTIVE_WHEN_DELETED"
            ]
          },
          "lastUpdatedDate": {
            "type": "string",
            "description": "The date and time this adjustment was last updated",
            "format": "date-time",
            "readOnly": true
          },
          "createdDate": {
            "type": "string",
            "description": "The date and time this adjustment was last created",
            "format": "date-time",
            "readOnly": true
          },
          "effectiveDays": {
            "type": "integer",
            "description": "The number of days effective in a calculation. (for example remand minus any unused deductions)",
            "format": "int32",
            "readOnly": true
          },
          "source": {
            "type": "string",
            "description": "Where was the adjustment last changed",
            "readOnly": true,
            "enum": [
              "NOMIS",
              "DPS"
            ]
          }
        },
        "description": "The adjustment and its identifier"
      },
      "LawfullyAtLargeDto": {
        "type": "object",
        "properties": {
          "affectsDates": {
            "type": "string",
            "description": "The type of LAL",
            "enum": [
              "YES",
              "NO"
            ]
          }
        },
        "description": "The details of a LAL adjustment"
      },
      "RemandDto": {
        "required": [
          "chargeId"
        ],
        "type": "object",
        "properties": {
          "chargeId": {
            "type": "array",
            "description": "The id of the charges this remand applies to",
            "items": {
              "type": "integer",
              "description": "The id of the charges this remand applies to",
              "format": "int64"
            }
          }
        },
        "description": "The details of remand adjustment"
      },
      "SpecialRemissionDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of Special Remission",
            "enum": [
              "MERITORIOUS_CONDUCT",
              "RELEASE_DATE_CALCULATED_TOO_EARLY",
              "RELEASE_IN_ERROR"
            ]
          }
        },
        "description": "The details of a Special Remission adjustment"
      },
      "TaggedBailDto": {
        "type": "object",
        "properties": {
          "caseSequence": {
            "type": "integer",
            "description": "The case sequence number this tagged-bail was associated with",
            "format": "int32"
          },
          "courtCaseUuid": {
            "type": "string",
            "description": "The dps court case id this tagged-bail was associated with",
            "format": "uuid"
          }
        },
        "description": "The details of the tagged bail adjustment"
      },
      "TimeSpentAsAnAppealApplicantDto": {
        "required": [
          "chargeIds"
        ],
        "type": "object",
        "properties": {
          "courtOfAppealReferenceNumber": {
            "type": "string",
            "description": "The court of appeal reference number for the time spent as an appeal applicant adjustment"
          },
          "chargeIds": {
            "type": "array",
            "description": "The id of the charges for this time spent as an appeal applicant",
            "items": {
              "type": "integer",
              "description": "The id of the charges for this time spent as an appeal applicant",
              "format": "int64"
            }
          }
        },
        "description": "The details of the time spent as an appeal applicant adjustment"
      },
      "TimeSpentInCustodyAbroadDto": {
        "required": [
          "chargeIds"
        ],
        "type": "object",
        "properties": {
          "documentationSource": {
            "type": "string",
            "description": "The source document for the time spent in custody abroad information",
            "enum": [
              "COURT_WARRANT",
              "PPCS_LETTER"
            ]
          },
          "chargeIds": {
            "type": "array",
            "description": "The id of the charges for this time spent in custody abroad adjustment",
            "items": {
              "type": "integer",
              "description": "The id of the charges for this time spent in custody abroad adjustment",
              "format": "int64"
            }
          }
        },
        "description": "The details of the time spent in custody abroad adjustment"
      },
      "UnlawfullyAtLargeDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of UAL",
            "enum": [
              "RECALL",
              "ESCAPE",
              "SENTENCED_IN_ABSENCE",
              "RELEASE_IN_ERROR",
              "IMMIGRATION_DETENTION"
            ]
          }
        },
        "description": "The details of a UAL adjustment"
      },
      "LegacyAdjustmentCreatedResponse": {
        "required": [
          "adjustmentId"
        ],
        "type": "object",
        "properties": {
          "adjustmentId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "CreateResponseDto": {
        "required": [
          "adjustmentIds"
        ],
        "type": "object",
        "properties": {
          "adjustmentIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "AdjustmentEffectiveDaysDto": {
        "required": [
          "effectiveDays",
          "id",
          "person"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the adjustment",
            "format": "uuid"
          },
          "effectiveDays": {
            "type": "integer",
            "description": "The number of days effective in a calculation. (for example remand minus any unused deductions)",
            "format": "int32"
          },
          "person": {
            "type": "string",
            "description": "The NOMIS ID of the person this adjustment applies to"
          }
        },
        "description": "Details of the adjustment and the number of effective days within a calculation."
      },
      "ValidationMessage": {
        "required": [
          "arguments",
          "code",
          "message",
          "type"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Validation code details",
            "enum": [
              "RADA_FROM_DATE_NOT_NULL",
              "RADA_REDUCES_BY_MORE_THAN_HALF",
              "MORE_RADAS_THAN_ADAS",
              "RADA_DATE_CANNOT_BE_FUTURE",
              "RADA_DATA_MUST_BE_AFTER_SENTENCE_DATE",
              "RADA_DAYS_MUST_BE_POSTIVE",
              "UAL_FROM_DATE_NOT_NULL",
              "UAL_TO_DATE_NOT_NULL",
              "UAL_FROM_DATE_AFTER_TO_DATE",
              "UAL_TYPE_NOT_NULL",
              "UAL_FIRST_DATE_CANNOT_BE_FUTURE",
              "UAL_LAST_DATE_CANNOT_BE_FUTURE",
              "UAL_DATE_MUST_BE_AFTER_SENTENCE_DATE",
              "LAL_FROM_DATE_NOT_NULL",
              "LAL_TO_DATE_NOT_NULL",
              "LAL_FROM_DATE_AFTER_TO_DATE",
              "LAL_AFFECTS_DATES_NOT_NULL",
              "LAL_FIRST_DATE_CANNOT_BE_FUTURE",
              "LAL_LAST_DATE_CANNOT_BE_FUTURE",
              "LAL_DATE_MUST_BE_AFTER_SENTENCE_DATE",
              "SREM_TYPE_NOT_NULL",
              "TCA_DOCUMENTATION_SOURCE_NOT_NULL",
              "TSA_COURT_OF_APPEAL_REFERENCE_NOT_NULL",
              "TSA_COURT_OF_APPEAL_REFERENCE_WRONG_LENGTH",
              "TSA_COURT_OF_APPEAL_REFERENCE_INVALID_CHARACTERS"
            ]
          },
          "arguments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "message": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "VALIDATION",
              "WARNING"
            ]
          }
        },
        "description": "Validation message details"
      },
      "RestoreAdjustmentsDto": {
        "required": [
          "ids"
        ],
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "description": "The IDs of the adjustments to restore",
            "items": {
              "type": "string",
              "description": "The IDs of the adjustments to restore",
              "format": "uuid"
            }
          }
        },
        "description": "The adjustment UUID"
      },
      "ManualUnusedDeductionsDto": {
        "required": [
          "days"
        ],
        "type": "object",
        "properties": {
          "days": {
            "type": "integer",
            "description": "The number of unused days",
            "format": "int32"
          }
        },
        "description": "Details of the number of unused days"
      },
      "ProspectiveAdaRejectionDto": {
        "required": [
          "dateChargeProved",
          "days",
          "person"
        ],
        "type": "object",
        "properties": {
          "person": {
            "type": "string",
            "description": "The NOMIS ID of the person this pada is rejected applies to"
          },
          "days": {
            "type": "integer",
            "description": "The number of days that were rejected",
            "format": "int32"
          },
          "dateChargeProved": {
            "type": "string",
            "description": "The date of the charges proved that were rejected",
            "format": "date"
          }
        },
        "description": "The DTO representing the PADAs rejected"
      },
      "AdaIntercept": {
        "required": [
          "anyProspective",
          "messageArguments",
          "number",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "NONE",
              "FIRST_TIME_WITH_NO_ADJUDICATION",
              "FIRST_TIME",
              "UPDATE",
              "PADAS",
              "PADA"
            ]
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "anyProspective": {
            "type": "boolean"
          },
          "messageArguments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "message": {
            "type": "string"
          }
        },
        "description": "Will be populated if there is a ADA_INTERCEPT in the thingsToDo",
        "nullable": true
      },
      "ThingsToDo": {
        "required": [
          "prisonerId",
          "thingsToDo"
        ],
        "type": "object",
        "properties": {
          "prisonerId": {
            "type": "string"
          },
          "thingsToDo": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ADA_INTERCEPT"
              ]
            }
          },
          "adaIntercept": {
            "$ref": "#/components/schemas/AdaIntercept"
          }
        }
      },
      "DlqMessage": {
        "required": [
          "body",
          "messageId"
        ],
        "type": "object",
        "properties": {
          "body": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "messageId": {
            "type": "string"
          }
        }
      },
      "GetDlqResult": {
        "required": [
          "messages",
          "messagesFoundCount",
          "messagesReturnedCount"
        ],
        "type": "object",
        "properties": {
          "messagesFoundCount": {
            "type": "integer",
            "format": "int32"
          },
          "messagesReturnedCount": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DlqMessage"
            }
          }
        }
      },
      "UnusedDeductionsCalculationResultDto": {
        "required": [
          "calculationAt",
          "person",
          "status"
        ],
        "type": "object",
        "properties": {
          "person": {
            "type": "string"
          },
          "calculationAt": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "NOMIS_ADJUSTMENT",
              "VALIDATION",
              "UNSUPPORTED",
              "RECALL",
              "UNKNOWN",
              "CALCULATED",
              "IN_PROGRESS"
            ]
          }
        }
      },
      "Ada": {
        "required": [
          "chargeNumber",
          "dateChargeProved",
          "days",
          "status"
        ],
        "type": "object",
        "properties": {
          "dateChargeProved": {
            "type": "string",
            "format": "date"
          },
          "chargeNumber": {
            "type": "string"
          },
          "toBeServed": {
            "type": "string"
          },
          "heardAt": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "AWARDED_OR_PENDING",
              "SUSPENDED",
              "QUASHED",
              "PROSPECTIVE"
            ]
          },
          "days": {
            "type": "integer",
            "format": "int32"
          },
          "consecutiveToChargeNumber": {
            "type": "string"
          }
        }
      },
      "AdaAdjudicationDetails": {
        "required": [
          "awaitingApproval",
          "awarded",
          "intercept",
          "prospective",
          "quashed",
          "recallWithMissingOutcome",
          "showExistingAdaMessage",
          "suspended",
          "totalAwaitingApproval",
          "totalAwarded",
          "totalExistingAdas",
          "totalProspective",
          "totalQuashed",
          "totalSuspended"
        ],
        "type": "object",
        "properties": {
          "awarded": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdasByDateCharged"
            }
          },
          "totalAwarded": {
            "type": "integer",
            "format": "int32"
          },
          "suspended": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdasByDateCharged"
            }
          },
          "totalSuspended": {
            "type": "integer",
            "format": "int32"
          },
          "quashed": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdasByDateCharged"
            }
          },
          "totalQuashed": {
            "type": "integer",
            "format": "int32"
          },
          "awaitingApproval": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdasByDateCharged"
            }
          },
          "totalAwaitingApproval": {
            "type": "integer",
            "format": "int32"
          },
          "prospective": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdasByDateCharged"
            }
          },
          "totalProspective": {
            "type": "integer",
            "format": "int32"
          },
          "intercept": {
            "$ref": "#/components/schemas/AdaIntercept"
          },
          "totalExistingAdas": {
            "type": "integer",
            "format": "int32"
          },
          "showExistingAdaMessage": {
            "type": "boolean"
          },
          "recallWithMissingOutcome": {
            "type": "boolean"
          },
          "earliestNonRecallSentenceDate": {
            "type": "string",
            "format": "date"
          },
          "earliestRecallDate": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "AdasByDateCharged": {
        "required": [
          "charges",
          "dateChargeProved"
        ],
        "type": "object",
        "properties": {
          "dateChargeProved": {
            "type": "string",
            "format": "date"
          },
          "charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ada"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "enum": [
              "AWARDED",
              "PENDING_APPROVAL",
              "SUSPENDED",
              "QUASHED",
              "PROSPECTIVE"
            ]
          },
          "adjustmentId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    }
  }
}
